---
  name: Copi Deploy Staging

  on:
    push:
      branches: ['*']
    workflow_dispatch:
  env:
    MIX_ENV: test
    POSTGRES_TEST_PWD: ${{ secrets.POSTGRES_TEST_PWD }}
  permissions:
    contents: read
  jobs:
    build-test-and-deploy:
      runs-on: ubuntu-latest # Or another supported runner
      services:
        postgres:
          image: postgres:14
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_TEST_PWD }}
            POSTGRES_DB: copi_test
          ports:
            - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      steps:
        - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

        - name: Cache deps
          id: cache-deps
          uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
          env:
            cache-name: cache-elixir-deps
          with:
            path: copi.owasp.org/deps
            key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
            restore-keys: |
              ${{ runner.os }}-mix-${{ env.cache-name }}-

        - name: Cache compiled build
          id: cache-build
          uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
          env:
            cache-name: cache-compiled-build
          with:
            path: copi.owasp-org/_build
            key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
            restore-keys: |
              ${{ runner.os }}-mix-${{ env.cache-name }}-
              ${{ runner.os }}-mix-

        - name: Install Elixir and Erlang
          uses: erlef/setup-beam@5304e04ea2b355f03681464e683d92e3b2f18451 # v1.18.2
          with:
            elixir-version: 1.18.2
            otp-version: 27.3.3
          env:
            ImageOS: ubuntu24

        - name: Install dependencies
          working-directory: copi.owasp.org
          run: mix deps.get

        - name: Build the project
          working-directory: copi.owasp.org
          run: mix compile
          
        - name: Run tests
          working-directory: copi.owasp.org
          run: mix test
        - name: Install Heroku CLI
          run: |
            curl https://cli-assets.heroku.com/install.sh | sh
        - name: Login to Heroku and setup config vars
          env: 
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
            HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL_STAGING }}
          run: |
            cat > ~/.netrc <<EOF
              machine api.heroku.com
                login $HEROKU_EMAIL
                password $HEROKU_API_KEY
              machine git.heroku.com
                login $HEROKU_EMAIL
                password $HEROKU_API_KEY
            EOF
            
        - name: Add Heroku remote
          env: 
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
            HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL_STAGING }}
          run: |
            heroku login -i
            [ -z "$(heroku config:get SECRET_KEY_BASE)" ] && heroku config:set SECRET_KEY_BASE=$(mix phx.gen.secret)
            [ -z "$(heroku config:get POOL_SIZE)" ] && heroku config:set POOL_SIZE=18
            heroku config:set PROJECT_PATH=copi.owasp.org
        - uses: akhileshns/heroku-deploy@e3eb99d45a8e2ec5dca08735e089607befa4bf28 # v.3.14.15
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: "copiweb-stage" #Must be unique in Heroku
            heroku_email: "johan.sydseter@owasp.org"
            buildpack: "https://github.com/negativetwelve/heroku-buildpack-subdir.git"
            appdir: "copi.owasp.org"
            procfile: "web: cd copi.owasp.org && MIX_ENV=prod _build/prod/rel/copi/bin/copi start"
