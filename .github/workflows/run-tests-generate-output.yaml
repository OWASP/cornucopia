name: Run Tests and generate output files
# Controls when the workflow will run 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    paths:
      - '.github/**'
      - 'source/**'
      - 'scripts/convert**'
      - 'resources/templates/**'
permissions:
  contents: read
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  hardening:
    permissions:
      contents: read
    uses: ./.github/workflows/hardening.yaml
  runtests:
    permissions:
      contents: read
    needs: hardening
    uses: ./.github/workflows/run-tests.yaml
  # If Tests pass, generate new output files
  uploadoutputfiles:
    name: Upload Output Files
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    needs: runtests
    outputs:
      artifact-url: ${{ steps.upload_artifact.outputs.artifact-url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Create tmp branch for artifacts and get parent and object ref
        id: find-target
        env:
          PR_NUMBER: ${{ github.event.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        run: |
          echo "parent=`git rev-parse HEAD`" >> "$GITHUB_ENV"
          echo "object_tree=`git write-tree`" >> "$GITHUB_ENV"
          git switch --orphan "tmp-$BRANCH_NAME-artifacts"
      - name: Checkout branch for pull request
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      # Set the pip environment up
      - name: Get Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.11'
          cache: 'pipenv' # caching pip dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt --require-hashes
          pipenv install -d
      - name: Generate new output files
        run: |
          #
          # Building EoP
          mkdir -p output/eop || echo "Ignore error"
          mkdir -p output/eop/Links || echo "Ignore error"
          mkdir -p output/eop/Fonts || echo "Ignore error"
          cp -rf ./resources/templates/Links/eop output/eop/Links/
          cp -rf ./resources/templates/Fonts/Selawik/* output/eop/Fonts/
          cp -rf ./resources/templates/Fonts/OpenSans/* output/eop/Fonts/
          pipenv run python scripts/convert.py -t tarot -l en -lt deck -v 5.0 -e eop  -i ./resources/templates/eop_ver_deck_tarot_lang.idml -o ./output/eop/eop-5.0-deck-en.idml
          pipenv run python scripts/convert.py -t tarot -l es -lt deck -v 5.0 -e eop  -i ./resources/templates/eop_ver_deck_tarot_lang.idml -o ./output/eop/eop-5.0-deck-es.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt instructions1 -v 5.0 -e eop  -i ./resources/templates/eop_ver_instructions1_tarot_lang.idml -o ./output/eop/1_instructionCard1.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt instructions2 -v 5.0 -e eop  -i ./resources/templates/eop_ver_instructions2_tarot_lang.idml -o ./output/eop/1_instructionCard2.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt strategy-cards -v 5.0 -e eop  -i ./resources/templates/eop_ver_strategy-cards_tarot_lang.idml -o ./output/eop/2_StrategyCard.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt cards -v 5.0 -e eop  -i ./resources/templates/eop_ver_cards_tarot_lang.idml -o ./output/eop/3_PlayingCards.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt threat-spoofing-cards -v 5.0 -e eop  -i ./resources/templates/eop_ver_threat-spoofing-cards_tarot_lang.idml -o ./output/eop/4_1THREATCARD-Spoofing.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt threat-tampering-cards -v 5.0 -e eop  -i ./resources/templates/eop_ver_threat-tampering-cards_tarot_lang.idml -o ./output/eop/4_2THREATCARD-Tampering.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt threat-repudation-cards -v 5.0 -e eop  -i ./resources/templates/eop_ver_threat-repudation-cards_tarot_lang.idml -o ./output/eop/4_3THREATCARD-Repudiation.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt threat-infodisclosure-cards -v 5.0 -e eop  -i ./resources/templates/eop_ver_threat-infodisclosure-cards_tarot_lang.idml -o ./output/eop/4_4THREATCARD-InfoDisclosure.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt threat-denialofsvc-cards -v 5.0 -e eop  -i ./resources/templates/eop_ver_threat-denialofsvc-cards_tarot_lang.idml -o ./output/eop/4_5THREATCARD-DenialofSvc.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt threat-elevofpriv-cards -v 5.0 -e eop  -i ./resources/templates/eop_ver_threat-elevofpriv-cards_tarot_lang.idml -o ./output/eop/4_6THREATCARD-ElevofPriv.idml
          pipenv run python scripts/convert.py -t tarot -l en -lt about -v 5.0 -e eop  -i ./resources/templates/eop_ver_about_tarot_lang.idml -o ./output/eop/5_AboutCard.idml
          zip -r output/eop-5.0.zip output/eop
          #
          # Building Cornucopia WebApp Edition
          mkdir -p output/cornucopia_webapp || echo "Ignore error"
          mkdir -p output/cornucopia_webapp/Links || echo "Ignore error"
          mkdir -p output/cornucopia_webapp/Fonts || echo "Ignore error"
          cp -rf ./resources/templates/Links/cornucopia_webapp output/cornucopia_webapp/Links/
          cp -rf ./resources/templates/Fonts/NotoSans/* output/cornucopia_webapp/Fonts/
          #
          # Building Cornucopia MobileApp Edition
          mkdir -p output/cornucopia_mobileapp || echo "Ignore error"
          mkdir -p output/cornucopia_mobileapp/Links || echo "Ignore error"
          mkdir -p output/cornucopia_mobileapp/Fonts || echo "Ignore error"
          cp -rf ./resources/templates/Links/cornucopia_mobileapp output/cornucopia_mobileapp/Links/
          cp -rf ./resources/templates/Fonts/NotoSans/* output/cornucopia_mobileapp/Fonts/
          #
          pipenv run python scripts/convert.py -l all -lt guide -t bridge -v 2.1 -e webapp
          pipenv run python scripts/convert.py -l en -lt cards -t all -v 2.1 -e webapp
          pipenv run python scripts/convert.py -l en -lt leaflet -t bridge -v 2.1 -e webapp
          pipenv run python scripts/convert.py -l en -lt leaflet -t tarot -v 2.1 -e webapp
          pipenv run python scripts/convert.py -l en -lt cards -t all -v 1.1 -e mobileapp
          pipenv run python scripts/convert.py -l en -lt leaflet -t bridge -v 1.1 -e mobileapp
          pipenv run python scripts/convert.py -l en -lt leaflet -t tarot -v 1.1 -e mobileapp
          cp output/owasp_cornucopia_mobileapp_1.1_cards_bridge_en.idml output/owasp_cornucopia_mobileapp_1.1_cards_bridge_qr_en.idml output/owasp_cornucopia_mobileapp_1.1_cards_tarot_en.idml output/owasp_cornucopia_mobileapp_1.1_cards_tarot_qr_en.idml output/owasp_cornucopia_mobileapp_1.1_leaflet_bridge_en.idml output/owasp_cornucopia_mobileapp_1.1_leaflet_tarot_en.idml output/cornucopia_mobileapp/
          cp output/owasp_cornucopia_webapp_2.1_cards_bridge_en.idml output/owasp_cornucopia_webapp_2.1_cards_tarot_en.idml output/owasp_cornucopia_webapp_2.1_cards_bridge_qr_en.idml output/owasp_cornucopia_webapp_2.1_cards_tarot_qr_en.idml output/owasp_cornucopia_webapp_2.1_leaflet_bridge_en.idml output/owasp_cornucopia_webapp_2.1_leaflet_tarot_en.idml output/cornucopia_webapp/
          zip output/owasp_cornucopia_mobileapp_1.1_en.zip -r output/cornucopia_mobileapp/Links/* output/cornucopia_mobileapp/Fonts/* output/cornucopia_mobileapp/owasp_cornucopia_mobileapp_1.1_cards_bridge_qr_en.idml output/cornucopia_mobileapp/owasp_cornucopia_mobileapp_1.1_cards_bridge_en.idml output/cornucopia_mobileapp/owasp_cornucopia_mobileapp_1.1_cards_tarot_en.idml output/cornucopia_mobileapp/owasp_cornucopia_mobileapp_1.1_cards_tarot_qr_en.idml output/cornucopia_mobileapp/owasp_cornucopia_mobileapp_1.1_leaflet_bridge_en.idml output/cornucopia_mobileapp/owasp_cornucopia_mobileapp_1.1_leaflet_tarot_en.idml ./resources/templates/owasp_cornucopia_mobileapp_scoresheet.pdf
          zip output/owasp_cornucopia_webapp_2.1_en.zip -r output/cornucopia_webapp/Links/* output/cornucopia_webapp/Fonts/* output/cornucopia_webapp/owasp_cornucopia_webapp_2.1_cards_bridge_qr_en.idml output/cornucopia_webapp/owasp_cornucopia_webapp_2.1_cards_bridge_en.idml output/cornucopia_webapp/owasp_cornucopia_webapp_2.1_cards_tarot_en.idml output/cornucopia_webapp/owasp_cornucopia_webapp_2.1_cards_tarot_qr_en.idml output/cornucopia_webapp/owasp_cornucopia_webapp_2.1_leaflet_bridge_en.idml output/cornucopia_webapp/owasp_cornucopia_webapp_2.1_leaflet_tarot_en.idml ./resources/templates/owasp_cornucopia_webapp_scoresheet.pdf
          zip output/cornucopia-build-files.zip -r \
            output/eop-5.0.zip \
            output/owasp_cornucopia_mobileapp_1.1_en.zip \
            output/owasp_cornucopia_webapp_2.1_en.zip \
            output/owasp_cornucopia_webapp_2.1_guide_bridge_en.docx \
            output/owasp_cornucopia_webapp_2.1_guide_bridge_es.docx \
            output/owasp_cornucopia_webapp_2.1_guide_bridge_fr.docx \
            output/owasp_cornucopia_webapp_2.1_guide_bridge_nl.docx \
            output/owasp_cornucopia_webapp_2.1_guide_bridge_no-nb.docx \
            output/owasp_cornucopia_webapp_2.1_guide_bridge_pt-br.docx \
            output/owasp_cornucopia_webapp_2.1_guide_bridge_pt-pt.docx \
            output/owasp_cornucopia_webapp_2.1_guide_bridge_ru.docx \
            output/owasp_cornucopia_webapp_2.1_guide_bridge_it.docx
      - name: Upload output files
        id: upload_artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          retention-days: 5
          name: cornucopia-build-files.${{ github.sha }}.zip
          path: |
            output/cornucopia-build-files.zip
  commentpr:
    name: Comment on PR with build artifacts
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    needs: uploadoutputfiles
    steps:
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          PR_NUMBER: ${{ github.event.number }}
          PR_NOTES: |
            Build artifacts:
            | Name | Link |
            |------|------|
            | Output files | [cornucopia-build-files.${{ github.sha }}.zip](${{needs.uploadoutputfiles.outputs.artifact-url}}) |
            [badge]: https://img.shields.io/badge/Build-Success!-3fb950?logo=github&style=for-the-badge
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: process.env.PR_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.PR_NOTES
            })